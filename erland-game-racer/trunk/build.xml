<project name="Racer" default="dist" basedir=".">

  <!-- set global properties for this build -->
  <property name="src" value="src"/>
  <property name="build" value="classes"/>
  <property name="dist"  value="lib"/>
  <property name="img" value="images"/>
  <property name="docs" value="docs/api"/>
  <property file="C:/Program Files/Java/build.properties"/>

  <target name="init">
    <!-- Create the time stamp -->
    <tstamp/>
    <!-- Create the build directory structure used by compile -->
    <mkdir dir="${build}"/>
  </target>

  <target name="compile" depends="init">
    <!-- Compile the java code from ${src} into ${build} -->

    <javac srcdir="${src}" destdir="${build}">
	    <classpath path="${classpath};../common/util/${dist}/util.jar;../common/game/${dist}/game.jar"/>
    </javac>
  </target>

  <target name="compiledebug" depends="init">
    <!-- Compile the java code from ${src} into ${build} with debug information -->

    <javac srcdir="${src}" destdir="${build}" debug="on">
	    <classpath path="${classpath};../common/util/${dist}/util.jar;../common/game/${dist}/game.jar"/>
    </javac>
  </target>

  <target name="dist" depends="compiledebug">
    <!-- Make sure to build other project this depend on -->
    <ant dir="../common/util"/>
    <ant dir="../common/game"/>

    <!-- Create the distribution directory -->
    <mkdir dir="${dist}"/>

    <!-- Copy images to ${build} dir -->
    <copy todir="${build}/${img}">
    	<fileset dir="${img}"/>
    </copy>
    <zip zipfile="${dist}/${ant.project.name}Images.zip">
	<fileset dir=".">
		<include name="${img}/**"/>
	</fileset>
    </zip>

    <!-- Put everything in ${build} into the ${ant.project.name}.jar file -->
    <jar jarfile="${dist}/${ant.project.name}.jar" basedir="${build}" manifest="MANIFEST.MF"/>

    <!-- Copy html-file and bat-file to distribution dir -->
    <copy todir="${dist}">
	    <fileset dir="." >
	      <include name="*.html"/>
	      <include name="*.bat"/>
	    </fileset>
    </copy>

    <!-- images to distribution dir -->
    <copy todir="${dist}/${img}">
	    <fileset dir="${build}/${img}"/>
    </copy>

    <!-- Copy required libraries to distribution dir -->
    <copy file="${java.home.jdklinkedlist}" todir="${dist}"/>
    <copy todir="${dist}">
		<fileset dir="../common/util/${dist}">
			<include name="*.jar"/>
		</fileset>
		<fileset dir="../common/game/${dist}">
			<include name="*.jar"/>
		</fileset>
    </copy>
  </target>

  <target name="doc">
    <mkdir dir="${docs}"/>
	<javadoc sourcepath="${src}"
		packagenames="erland.game.racer"
		destdir="${docs}"
		package="true"
		author="true"
		version="true"
		use="true"
		windowtitle="${ant.project.name} API"
		doctitle="${ant.project.name}"
		classpath="../Common/util/${dist}/util.jar;../Common/game/${dist}/game.jar"
		bottom="Copyright &#169; 2000 Erland Isaksson. All Rights Reserved.">
    <link offline="true" href="file://${java.home.jdk.docs.local}" packagelistLoc="${java.home.jdk.docs.local}"/>
    <link offline="true" href="file://${erland.home.java}/Common/util/${docs}" packagelistLoc="${erland.home.java}/Common/util/${docs}"/>
    <link offline="true" href="file://${erland.home.java}/Common/game/${docs}" packagelistLoc="${erland.home.java}/Common/game/${docs}"/>
	</javadoc>
  </target>
  <target name="docpublic">
    <mkdir dir="${docs}"/>
	<javadoc sourcepath="${src}"
		packagenames="erland.game.racer"
		destdir="${docs}"
		public="true"
		author="true"
		version="true"
		use="true"
		windowtitle="${ant.project.name} API"
		doctitle="${ant.project.name}"
		classpath="../Common/util/${dist}/util.jar;../Common/game/${dist}/game.jar"
		bottom="Copyright &#169; 2000 Erland Isaksson. All Rights Reserved.">
    <link offline="true" href="file://${java.home.jdk.docs.local}" packagelistLoc="${java.home.jdk.docs.local}"/>
    <link offline="true" href="file://${erland.home.java}/Common/util/${docs}" packagelistLoc="${erland.home.java}/Common/util/${docs}"/>
    <link offline="true" href="file://${erland.home.java}/Common/game/${docs}" packagelistLoc="${erland.home.java}/Common/game/${docs}"/>
	</javadoc>
  </target>

  <target name="clean">
    <!-- Delete the ${build} and ${dist} directory trees -->
    <delete dir="${build}"/>
    <delete dir="${dist}"/>
    <delete dir="${docs}"/>
    <delete dir="${docs}/.."/>
  </target>
</project>
